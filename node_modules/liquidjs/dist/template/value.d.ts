import { Filter } from 'liquidjs/dist/template/filter';
import { Expression } from 'liquidjs/dist/render';
import type { FilteredValueToken } from 'liquidjs/dist/tokens';
import type { Liquid } from 'liquidjs/dist/liquid';
import type { Context } from 'liquidjs/dist/context';
export declare class Value {
    readonly filters: Filter[];
    readonly initial: Expression;
    /**
     * @param str the value to be valuated, eg.: "foobar" | truncate: 3
     */
    constructor(input: string | FilteredValueToken, liquid: Liquid);
    value(ctx: Context, lenient?: boolean): Generator<unknown, unknown, unknown>;
    private getFilter;
}
